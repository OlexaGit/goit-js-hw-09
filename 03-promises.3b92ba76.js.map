{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAqCA,SAASC,EAAcC,EAAUC,GAG/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,uBAAwCM,OAAfT,EAAS,QAAYS,OAANR,EAAM,OAGpDG,EAAK,sBAAqCK,OAAfT,EAAS,QAAYS,OAANR,EAAM,M,GAGnDA,E,IAhDMS,SAASC,cAAc,SAC/BC,iBAAiB,UAEtB,SAAuBC,GACrBA,EAAEC,iBAEF,IAAMC,EAAeF,EAAEG,cAAcC,SAC/BC,EAAUC,OAAOJ,EAAad,MAAMmB,OACpCC,EAAOF,OAAOJ,EAAaM,KAAKD,OAChCE,EAASH,OAAOJ,EAAaO,OAAOF,OAItCG,EAAQL,EACZM,QAAQC,IAAI,SAAUF,GACtB,IAAK,IAAIG,EAAI,EAAGA,EAAIJ,EAAS,EAAGI,GAAK,EACnC3B,EAAc2B,EAAGH,GACdI,MAAK,SAAAC,G,IAAG5B,EAAQ4B,EAAR5B,SAAUC,EAAK2B,EAAL3B,MAGjB4B,EAAAhC,GAASiC,OAAOC,QACd,uBAAwCtB,OAAfT,EAAS,QAAYS,OAANR,EAAM,M,IAGjD+B,OAAM,SAAAJ,G,IAAG5B,EAAQ4B,EAAR5B,SAAUC,EAAK2B,EAAL3B,MAClB4B,EAAAhC,GAASiC,OAAOG,QACd,sBAAuCxB,OAAfT,EAAS,QAAYS,OAANR,EAAM,M,IAGnDsB,GAAgBF,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nform.addEventListener('submit', onClickSubmit);\n\nfunction onClickSubmit(e) {\n  e.preventDefault();\n  // console.log('hi');\n  const formElements = e.currentTarget.elements;\n  const delayEl = Number(formElements.delay.value);\n  const step = Number(formElements.step.value);\n  const amount = Number(formElements.amount.value);\n  // console.log('delay:', delay);\n  // console.log('step:', step);\n  // console.log(amount + 1);\n  let delay = delayEl;\n  console.log('delay:', delay);\n  for (let i = 1; i < amount + 1; i += 1) {\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        // console.log('delayCR:', delay);\n        // console.log('position:', position);\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.warning(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n    delay = delay + step;\n    // console.log('delayEl + step:', delay);\n    // console.log('i:', i);\n  }\n}\n\nfunction createPromise(position, delay) {\n  // console.log('delayCR:', delay);\n  // console.log('position:', position);\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        // Fulfill\n      } else {\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n        // Reject\n      }\n    }, delay);\n  });\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","concat","document","querySelector","addEventListener","e","preventDefault","formElements","currentTarget","elements","delayEl","Number","value","step","amount","delay1","console","log","i","then","param","$parcel$interopDefault","Notify","success","catch","warning"],"version":3,"file":"03-promises.3b92ba76.js.map"}