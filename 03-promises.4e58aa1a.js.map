{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEaC,SAASC,cAAc,SAC/BC,iBAAiB,UAEtB,SAAuBC,GACrBA,EAAEC,iBACFC,QAAQC,IAAI,MACZ,IAAMC,EAAeJ,EAAEK,cAAcC,SACvBF,EAAaG,MAAMC,MACpBJ,EAAaK,KAAKD,OAoBVE,EAnBNN,EAAaO,OAAOH,MAmBJD,EAZT,IAatBL,QAAQC,IAAI,WAAYI,GACxBL,QAAQC,IAAI,YAAaO,GAClB,IAAIE,SAAQ,SAACC,EAASC,GAYLC,KAAKC,SAAW,GAIpCH,EAAQ,uBAAwCI,OAAfP,EAAS,QAAYO,OAANV,EAAM,OAItDO,EAAO,sBAAqCG,OAAfP,EAAS,QAAYO,OAANV,EAAM,M,KAlCnDW,MAAK,SAAAC,G,IAAGT,EAAQS,EAART,SAAUH,EAAKY,EAALZ,MACjBL,QAAQC,IAAI,WAAYI,GACxBL,QAAQC,IAAI,YAAaO,GACzBU,EAAAzB,GAAS0B,OAAOC,QAAQ,uBAAwCL,OAAfP,EAAS,QAAYO,OAANV,EAAM,M,IAEvEgB,OAAM,SAAAJ,G,IAAGT,EAAQS,EAART,SAAUH,EAAKY,EAALZ,MAClBa,EAAAzB,GAAS0B,OAAOG,QAAQ,sBAAuCP,OAAfP,EAAS,QAAYO,OAANV,EAAM,M,IAK3E,IAAuBG,EAAUH,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nform.addEventListener('submit', onClickSubmit);\n\nfunction onClickSubmit(e) {\n  e.preventDefault();\n  console.log('hi');\n  const formElements = e.currentTarget.elements;\n  const delay = formElements.delay.value;\n  const step = formElements.step.value;\n  const amount = formElements.amount.value;\n  // console.log('delay:', delay);\n  // console.log('step:', step);\n  // console.log('amount:', amount);\n  // createPromise(amount, delay);\n  // // for (let i = 1; i <= amountEl; i += 1) {\n\n  createPromise(amount, 3000)\n    .then(({ position, delay }) => {\n      console.log('delayCR:', delay);\n      console.log('position:', position);\n      Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notiflix.Notify.warning(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n  // }\n}\n\nfunction createPromise(position, delay) {\n  console.log('delayCR:', delay);\n  console.log('position:', position);\n  return new Promise((resolve, reject) => {\n    // const shouldResolve = Math.random() > 0.3;\n    // setTimeout(() => {\n    //   if (shouldResolve) {\n    //     resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    //     // Fulfill\n    //   } else {\n    //     reject(`❌ Rejected promise ${position} in ${delay}ms`);\n    //     // Reject\n    //   }\n    // }, delay);\n\n    const shouldResolve = Math.random() > 0.3;\n    if (shouldResolve) {\n      // console.log('shouldResolveTrue:', shouldResolve);\n      // Fulfill\n      resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    } else {\n      // console.log('shouldResolveFalse:', shouldResolve);\n      // Reject\n      reject(`❌ Rejected promise ${position} in ${delay}ms`);\n    }\n  });\n}\n"],"names":["$6JpON","parcelRequire","document","querySelector","addEventListener","e","preventDefault","console","log","formElements","currentTarget","elements","delay","value","step","position","amount","Promise","resolve","reject","Math","random","concat","then","param","$parcel$interopDefault","Notify","success","catch","warning"],"version":3,"file":"03-promises.4e58aa1a.js.map"}