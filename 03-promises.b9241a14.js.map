{"mappings":"gfAAAA,EAAA,SAEaC,SAASC,cAAc,SAC/BC,iBAAiB,UAEtB,SAAuBC,GACrBA,EAAEC,cAAcC,IAAI,MACpBC,QAAQD,IAAI,MAUZC,QAAQD,IAAI,K","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nform.addEventListener('submit', onClickSubmit);\n\nfunction onClickSubmit(e) {\n  e.prevenconsole.log('hi');\n  console.log('hi');\n  // const formElements = e.currentTarget.elements;\n  // const delay = formElements.delay.value;\n  // const step = formElements.step.value;\n  // const amount = formElements.amount.value;\n  // console.log('delay:', delay);\n  // console.log('step:', step);\n  // console.log('amount:', amount);\n  // createPromise(amount, delay);\n  // // for (let i = 1; i <= amountEl; i += 1) {\n  console.log('hi');\n  // // createPromise(amountEl, 3000)\n  //   .then(({ position, delay }) => {\n  //     Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  //   })\n  //   .catch(({ position, delay }) => {\n  //     Notiflix.Notify.warning(`❌ Rejected promise ${position} in ${delay}ms`);\n  //   });\n  // }\n}\n\n// function createPromise(position, delay) {\n//   // console.log('delayCR:', delay);\n//   // console.log('position:', position);\n//   return new Promise((resolve, reject) => {\n//     // const shouldResolve = Math.random() > 0.3;\n//     // setTimeout(() => {\n//     //   if (shouldResolve) {\n//     //     resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//     //     // Fulfill\n//     //   } else {\n//     //     reject(`❌ Rejected promise ${position} in ${delay}ms`);\n//     //     // Reject\n//     //   }\n//     // }, delay);\n\n//     const shouldResolve = Math.random() > 0.3;\n//     if (shouldResolve) {\n//       // console.log('shouldResolveTrue:', shouldResolve);\n//       // Fulfill\n//       resolve(`✅ Fulfilled promise ${position} in ${delay}ms===`);\n//     } else {\n//       // console.log('shouldResolveFalse:', shouldResolve);\n//       // Reject\n//       reject(`❌ Rejected promise ${position} in ${delay}ms===`);\n//     }\n//   });\n// }\n"],"names":["parcelRequire","document","querySelector","addEventListener","e","prevenconsole","log","console"],"version":3,"file":"03-promises.b9241a14.js.map"}